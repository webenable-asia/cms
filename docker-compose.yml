
services:
  db:
    image: couchdb:3
    restart: always
    ports:
      - "5984:5984"
    environment:
      COUCHDB_USER: ${COUCHDB_USER:-admin}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
    volumes:
      - couchdb_data:/opt/couchdb/data

  cache:
    image: docker.io/valkey/valkey:alpine3.22
    restart: always
    ports:
      - "6379:6379"
    command: valkey-server --requirepass ${VALKEY_PASSWORD} --appendonly yes
    volumes:
      - valkey_data:/data
    healthcheck:
      test: ["CMD", "valkey-cli", "-a", "${VALKEY_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - cache
    env_file:
      - .env.development
    environment:
      - COUCHDB_URL=http://${COUCHDB_USER:-admin}:${COUCHDB_PASSWORD}@db:5984/
      - VALKEY_URL=redis://:${VALKEY_PASSWORD}@cache:6379

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - BACKEND_URL=http://backend:8080
      - NODE_ENV=development
    restart: unless-stopped

volumes:
  couchdb_data:
  valkey_data:
