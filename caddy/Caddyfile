# WebEnable CMS Caddyfile
# Caddy 2 configuration for production deployment

{
    # Global options
    admin off
    auto_https off
    
    # Logging
    log {
        output stdout
        format json
        level INFO
    }
}

# Main site configuration
localhost:80 {
    # Security headers
    header {
        X-Frame-Options DENY
        X-Content-Type-Options nosniff
        X-XSS-Protection "1; mode=block"
        Referrer-Policy strict-origin-when-cross-origin
        -Server
    }

    # API routes - proxy to backend (without stripping path)
    handle /api/* {
        reverse_proxy backend:8080 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_ip}
            header_up X-Forwarded-For {remote_ip}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Health check endpoint
    handle /health {
        header Content-Type text/plain
        respond "healthy" 200
    }

    # Static file caching for assets
    @static {
        path *.js *.css *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
    }
    handle @static {
        header Cache-Control "public, max-age=31536000, immutable"
        reverse_proxy frontend:8080 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_ip}
            header_up X-Forwarded-For {remote_ip}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Frontend routes - everything else goes to Next.js
    handle {
        reverse_proxy frontend:8080 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_ip}
            header_up X-Forwarded-For {remote_ip}
            header_up X-Forwarded-Proto {scheme}
        }
    }

    # Enable compression
    encode gzip zstd

    # Access logging
    log {
        output stdout
        format json
    }
}

# Database proxy configuration (CouchDB) - HTTP only
http://localhost:5984 {
    # Security headers for database access
    header {
        X-Frame-Options DENY
        X-Content-Type-Options nosniff
        -Server
    }

    # Restrict access to database admin interface
    handle /_utils/* {
        # Only allow from localhost/internal networks
        @internal {
            remote_ip 127.0.0.1/8 172.16.0.0/12 192.168.0.0/16 10.0.0.0/8
        }
        handle @internal {
            reverse_proxy db:5984 {
                header_up Host {upstream_hostport}
                header_up X-Real-IP {remote_ip}
                header_up X-Forwarded-For {remote_ip}
                header_up X-Forwarded-Proto {scheme}
            }
        }
        handle {
            respond "Access denied" 403
        }
    }

    # Database API access
    handle /* {
        # Add rate limiting for database access
        reverse_proxy db:5984 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_ip}
            header_up X-Forwarded-For {remote_ip}
            header_up X-Forwarded-Proto {scheme}
            
            # Connection pooling and timeouts
            transport http {
                keepalive 30s
                keepalive_idle_conns 10
                response_header_timeout 30s
            }
        }
    }

    # Logging for database access
    log {
        output stdout
        format json
        level INFO
    }
}
