apiVersion: apps/v1
kind: Deployment
metadata:
  name: valkey
  namespace: webenable-cms
  labels:
    app.kubernetes.io/component: valkey
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: valkey
  template:
    metadata:
      labels:
        app.kubernetes.io/component: valkey
    spec:
      serviceAccountName: valkey-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: valkey
        image: docker.io/valkey/valkey:alpine3.22
        command:
        - valkey-server
        - --requirepass
        - $(VALKEY_PASSWORD)
        - --appendonly
        - yes
        - --save
        - "60"
        - "1"
        - --tcp-keepalive
        - "300"
        - --maxmemory
        - "256mb"
        - --maxmemory-policy
        - "allkeys-lru"
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: VALKEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: webenable-cms-secrets
              key: VALKEY_PASSWORD
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: valkey-data
          mountPath: /data
        livenessProbe:
          exec:
            command:
            - valkey-cli
            - -a
            - $(VALKEY_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - valkey-cli
            - -a
            - $(VALKEY_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: valkey-data
        persistentVolumeClaim:
          claimName: valkey-pvc 